### YamlMime:UniversalReference
items:
  - uid: azure-iothub.ServiceReceiver
    name: ServiceReceiver
    fullName: ServiceReceiver
    children:
      - azure-iothub.ServiceReceiver.constructor
      - azure-iothub.ServiceReceiver.abandon
      - azure-iothub.ServiceReceiver.complete
      - azure-iothub.ServiceReceiver.detach
      - azure-iothub.ServiceReceiver.forceDetach
      - azure-iothub.ServiceReceiver.reject
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: EventEmitter
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.constructor
    name: ServiceReceiver
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ServiceReceiver(receiver: ReceiverLink)'
      parameters:
        - id: receiver
          type:
            - ReceiverLink
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.abandon
    name: abandon
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function abandon(message: Message, done?:
        Client.Callback<MessageAbandoned>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: done
          type:
            - azure-iothub.Client.Callback<MessageAbandoned>
          description: ''
          optional: true
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.complete
    name: complete
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function complete(message: Message, done?:
        Client.Callback<MessageCompleted>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: done
          type:
            - azure-iothub.Client.Callback<MessageCompleted>
          description: ''
          optional: true
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.detach
    name: detach
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detach(callback: (err?: Error) => void)'
      parameters:
        - id: callback
          type:
            - '(err?: Error) => void'
          description: ''
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.forceDetach
    name: forceDetach
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function forceDetach(err?: Error)'
      parameters:
        - id: err
          type:
            - Error
          description: ''
          optional: true
    package: azure-iothub
  - uid: azure-iothub.ServiceReceiver.reject
    name: reject
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function reject(message: Message, done?:
        Client.Callback<MessageRejected>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: done
          type:
            - azure-iothub.Client.Callback<MessageRejected>
          description: ''
          optional: true
    package: azure-iothub
references:
  - uid: azure-iothub.Client.Callback<MessageAbandoned>
    name: Callback<MessageAbandoned>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <MessageAbandoned>
        fullName: <MessageAbandoned>
  - uid: azure-iothub.Client.Callback<MessageCompleted>
    name: Callback<MessageCompleted>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <MessageCompleted>
        fullName: <MessageCompleted>
  - uid: azure-iothub.Client.Callback<MessageRejected>
    name: Callback<MessageRejected>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <MessageRejected>
        fullName: <MessageRejected>
