### YamlMime:UniversalReference
items:
  - uid: azure-iothub.Client
    name: Client
    fullName: Client
    children:
      - azure-iothub.Client.Callback
      - azure-iothub.Client.TransportCtor
      - azure-iothub.Client.close
      - azure-iothub.Client.getFeedbackReceiver
      - azure-iothub.Client.getFileNotificationReceiver
      - azure-iothub.Client.invokeDeviceMethod
      - azure-iothub.Client.invokeDeviceMethod_1
      - azure-iothub.Client.open
      - azure-iothub.Client.send
      - azure-iothub.Client.setRetryPolicy
      - azure-iothub.Client.fromConnectionString
      - azure-iothub.Client.fromSharedAccessSignature
    langs:
      - typeScript
    type: class
    summary: >
      The IoT Hub service client is used to communicate with devices through an
      Azure IoT hub.

      It lets the SDK user:
        - send device-to-cloud (also known as commands) to devices: commands are queued on IoT Hub and delivered asynchronously only when the device is connected. Only 50 commands can be queued per device.
        - invoke direct methods on devices (which will work only if the device is currently connected: it's a synchronous way of communicating with the device)
        - listen for feedback messages sent by devices for previous commands.
        - listen for file upload notifications from devices.
      Users should create new <xref:azure-iothub.Client> instances by calling
      one of the factory methods,

      [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or

      [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature),

      to create an IoT Hub service Client.
    extends:
      name: EventEmitter
    package: azure-iothub
  - uid: azure-iothub.Client.Callback
    name: Callback
    fullName: Callback<T>
    children: []
    langs:
      - typeScript
    type: class
    summary: |+

    package: azure-iothub
  - uid: azure-iothub.Client.TransportCtor
    name: TransportCtor
    fullName: TransportCtor
    children: []
    langs:
      - typeScript
    type: class
    summary: |+

    package: azure-iothub
  - uid: azure-iothub.Client.close
    name: close
    children: []
    type: method
    langs:
      - typeScript
    summary: Closes the connection to an IoT hub.
    syntax:
      content: 'function close(done?: Callback<Disconnected>)'
      parameters:
        - id: done
          type:
            - azure-iothub.Client.Callback<Disconnected>
          description: |
            The function to call when the operation is
                                       complete. `done` will be passed an Error object
                                       argument, which will be null if the operation
                                       completed successfully.
          optional: true
  - uid: azure-iothub.Client.getFeedbackReceiver
    name: getFeedbackReceiver
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a AmqpReceiver object which emits events when new feedback
      messages are received by the client.
    syntax:
      content: 'function getFeedbackReceiver(done: Callback<ServiceReceiver>)'
      parameters:
        - id: done
          type:
            - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
          description: |
            The function to call when the operation is
                                         complete. `done` will be called with two
                                         arguments: an Error object (can be null) and a
                                         AmqpReceiver object.
  - uid: azure-iothub.Client.getFileNotificationReceiver
    name: getFileNotificationReceiver
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a AmqpReceiver object which emits events when new file upload
      notifications are received by the client.
    syntax:
      content: 'function getFileNotificationReceiver(done: Callback<ServiceReceiver>)'
      parameters:
        - id: done
          type:
            - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
          description: |
            The function to call when the operation is
                                         complete. `done` will be called with two
                                         arguments: an Error object (can be null) and a
                                         AmqpReceiver object.
  - uid: azure-iothub.Client.invokeDeviceMethod
    name: invokeDeviceMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Invokes a method on a particular device or module.
    syntax:
      content: >-
        function invokeDeviceMethod(deviceId: string, methodParams:
        DeviceMethodParams, done?: Callback<any>)
      parameters:
        - id: deviceId
          type:
            - string
          description: The identifier of an existing device identity.
        - id: methodParams
          type:
            - azure-iothub.DeviceMethodParams
          description: ''
        - id: done
          type:
            - azure-iothub.Client.Callback<any>
          description: |
            The callback to call with the result of the method execution.
          optional: true
    exceptions:
      - type: ReferenceError
        description: 'If one of the required parameters is null, undefined or empty.'
      - type: TypeError
        description: |
          If one of the parameters is of the wrong type.
  - uid: azure-iothub.Client.invokeDeviceMethod_1
    name: invokeDeviceMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Invokes a method on a particular device or module.
    syntax:
      content: >-
        function invokeDeviceMethod(deviceId: string, moduleId: string,
        methodParams: DeviceMethodParams, done?: Callback<any>)
      parameters:
        - id: deviceId
          type:
            - string
          description: ''
        - id: moduleId
          type:
            - string
          description: ''
        - id: methodParams
          type:
            - azure-iothub.DeviceMethodParams
          description: ''
        - id: done
          type:
            - azure-iothub.Client.Callback<any>
          description: ''
          optional: true
    exceptions:
      - type: ReferenceError
        description: 'If one of the required parameters is null, undefined or empty.'
      - type: TypeError
        description: |
          If one of the parameters is of the wrong type.
  - uid: azure-iothub.Client.open
    name: open
    children: []
    type: method
    langs:
      - typeScript
    summary: Opens the connection to an IoT hub.
    syntax:
      content: 'function open(done?: Callback<Connected>)'
      parameters:
        - id: done
          type:
            - azure-iothub.Client.Callback<Connected>
          description: |
            The function to call when the operation is
                                       complete. `done` will be passed an Error object
                                       argument, which will be null if the operation
                                       completed successfully.
          optional: true
  - uid: azure-iothub.Client.send
    name: send
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends a message to a device.
    syntax:
      content: >-
        function send(deviceId: string, message: Message | BufferConvertible,
        done?: Callback<MessageEnqueued>)
      parameters:
        - id: deviceId
          type:
            - string
          description: The identifier of an existing device identity.
        - id: message
          type:
            - Message | BufferConvertible
          description: |-
            The body of the message to send to the device.
                                         If `message` is not of type
                                         [Message](xref:azure-iot-common.Message),
                                         it will be converted.
        - id: done
          type:
            - azure-iothub.Client.Callback<MessageEnqueued>
          description: |
            The function to call when the operation is
                                         complete. `done` will be called with two
                                         arguments: an Error object (can be null) and a
                                         transport-specific response object useful for
                                         logging or debugging.
          optional: true
    exceptions:
      - type: ReferenceError
        description: |
          If `deviceId` or `message` is null, undefined or empty.
  - uid: azure-iothub.Client.setRetryPolicy
    name: setRetryPolicy
    children: []
    type: method
    langs:
      - typeScript
    summary: Set the policy used by the client to retry network operations.
    syntax:
      content: 'function setRetryPolicy(policy: RetryPolicy)'
      parameters:
        - id: policy
          type:
            - RetryPolicy
          description: |
            policy used to retry operations (eg. open, send, etc.).
                          The SDK comes with 2 "built-in" policies: ExponentialBackoffWithJitter (default)
                          and NoRetry (to cancel any form of retry). The user can also pass its own object as
                          long as it implements 2 methods:
                          - shouldRetry(err: Error): boolean : indicates whether an operation should be retried based on the error type
                          - nextRetryTimeout(retryCount: number, throttled: boolean): number : returns the time to wait (in milliseconds)
                          before retrying based on the past number of attempts (retryCount) and the fact that the error is a throttling error or not.
  - uid: azure-iothub.Client.fromConnectionString
    name: fromConnectionString
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates an IoT Hub service client from the given
                         connection string using the default transport
                         (Amqp) or the one specified in the second argument.
    syntax:
      content: >-
        static function fromConnectionString(connStr: string, transportCtor?:
        TransportCtor)
      parameters:
        - id: connStr
          type:
            - string
          description: |-
            A connection string which encapsulates "device
                                             connect" permissions on an IoT hub.
        - id: transportCtor
          type:
            - azure-iothub.Client.TransportCtor
          description: ''
          optional: true
      return:
        type:
          - azure-iothub.Client
  - uid: azure-iothub.Client.fromSharedAccessSignature
    name: fromSharedAccessSignature
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates an IoT Hub service client from the given
                         shared access signature using the default transport
                         (Amqp) or the one specified in the second argument.
    syntax:
      content: >-
        static function fromSharedAccessSignature(sharedAccessSignature: string,
        transportCtor?: TransportCtor)
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: |-
            A shared access signature which encapsulates
                                       "service connect" permissions on an IoT hub.
        - id: transportCtor
          type:
            - azure-iothub.Client.TransportCtor
          description: ''
          optional: true
      return:
        type:
          - azure-iothub.Client
references:
  - uid: azure-iothub.Client.Callback<MessageAbandoned>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <MessageAbandoned>
        fullName: <MessageAbandoned>
  - uid: azure-iothub.Client.Callback<MessageCompleted>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <MessageCompleted>
        fullName: <MessageCompleted>
  - uid: azure-iothub.Client.Callback<MessageRejected>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <MessageRejected>
        fullName: <MessageRejected>
  - uid: azure-iothub.Client.Callback<Connected>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <Connected>
        fullName: <Connected>
  - uid: azure-iothub.Client.Callback<Disconnected>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <Disconnected>
        fullName: <Disconnected>
  - uid: azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <
        fullName: <
      - name: ServiceReceiver
        fullName: ServiceReceiver
        uid: azure-iothub.Client.ServiceReceiver
      - name: '>'
        fullName: '>'
  - uid: azure-iothub.Client.Callback<MessageEnqueued>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <MessageEnqueued>
        fullName: <MessageEnqueued>
  - uid: azure-iothub.DeviceMethodParams
    spec.typeScript:
      - name: DeviceMethodParams
        fullName: DeviceMethodParams
        uid: azure-iothub.DeviceMethodParams
  - uid: azure-iothub.Client.Callback<any>
    spec.typeScript:
      - name: Callback
        fullName: Callback
        uid: azure-iothub.Client.Callback
      - name: <any>
        fullName: <any>
  - uid: azure-iothub.Client.TransportCtor
    spec.typeScript:
      - name: TransportCtor
        fullName: TransportCtor
        uid: azure-iothub.Client.TransportCtor
  - uid: azure-iothub.Client
    spec.typeScript:
      - name: Client
        fullName: Client
        uid: azure-iothub.Client
